{
  "README.html": {
    "href": "README.html",
    "title": "Passolo-api-docs",
    "summary": "Passolo-api-docs What is it? This the main repository for the Passolo Public API documentation. Can I contribute? Anyone is welcome to contribute to the public Passolo API documentation by making a pull request into the master repository. The documentation is split into the following sections: Articles This section hosts a series of usefull article on: how to get started with writing plug-ins for Passolo how to best use the public APIs how to troubleshoot common issues API Concepts This section hosts the main guidelines on using the Public API along with the API References Getting started with your contribution The documentation is built using a static documentation generator called DocFX. The documentation content is saved in Markdown files and then built into a website using DocFX. The table of content is saved into separate toc.yml files. In order for you to make a contribution directly please follow the next steps: Create a local branch from the main repository Add your changes by modifying existing Markdown files or by adding new Markdown files Adding new files will require updating the toc.yml files. Use the guideline provided by DocFX to learn more. You can use tools such as Notepad++ or Visual Studio Code to edit the content Create a Pull Request with your changes. This pull request will be reviewed for correctness by one of our technical writers Once your pull request has been approved and committed into the main branch, an automatic pipeline will be triggered which will push your changes to the live documentation site if you wish to test your changes locally you can follow the DOCFX Installation guideline and build the entire solution locally Our documentation automatically fills in the product name and other details so you don't have to make the changes manually if we decide to update the product name. Use the 'var:VariableName' construct to tell our documentation engine to fill in the info for you. Here are the constructs available at this point: var:ProductName - The product name, for example Passolo var:ProductNameWithEdition - The official product release name including the edition, for example 'Passolo 2024'"
  },
  "apiconcepts/overview.html": {
    "href": "apiconcepts/overview.html",
    "title": "Passolo API Documentation",
    "summary": "Passolo API Documentation Passolo is a localization tool that enables you to translate the user interfaces of software applications. You can find all the information about working with the Passolo API in the RWS documentation portal. You may find there is some lag in rendering the pages to this documentation, please be patient. The plan is to move it to this site in the near future. What does the Passolo API cover? Scripting and Automation Scripting and Automation are powerful concepts to customize applications and integrate applications so that they work together like one single application. COM - Some background Using Sax Basic effectively requires that you should have a basic understanding of COM, component based computing and the Passolo Object Model. COM (the Component Object Model) is a binary standard for interfacing and interoperation of (possibly, separately-developed) components. More and more, everything Microsoft offers is COM-compliant. Automation of Passolo You can automate Passolo from any programming language that is able to connect to automation servers. Using automation, Passolo can be integrated into workflow management systems. Nearly every operation which is normally performed by a user can be automated without human interaction. Using Macros in Passolo Instead of using an external programming development tool, you can also use the scripting engine embedded in Passolo. The scripting engine is VBA compatible and includes an editor and a debugger. The System Macro In the dialog Macro you can select one of the available macros as the system macro. When you start the system macro with the command Tools / System Macro / Start System Macro this macro will be active all the time. When you work with Passolo some of the actions you perform will issue events. If the related call back handlers are defined in the system macro, these events can be processed. Automating other applications from Passolo In order to use another application in a Passolo macro, you should add a reference to the object. What's new in Passolo Automation This page contains the latest changes made to Passolo Automation. Getting help After having understood the basic principle of the object model, all you have to do is obtain some information about the names of all the objects and what properties and methods they have. This getting help section will explain how this is done."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Welcome to the Var:ProductName API documentation.",
    "summary": "Welcome to the Var:ProductName API documentation. Here youâ€™ll find all the information you need to get started developing your own Var:ProductName plugin. Discover quick guides explaining how to build, develop and deploy your app, plus hints and tips to help you make the most of our APIs. Should you have any ideas as to how we can improve this documentation, any new topics you think we should include or hints and tips you would like to share with the developer community, please let us know. To let us know what your suggested improvements are you can do this by using the \"Improve this Doc\" link on the top right of every page. You will need your own github account for this because this action will create a fork of the repository in your account where you can make the changes and then submit a pull request for us to review and accept. Good luck and happy developing!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Access the Var:ProductName SDK and COM API",
    "summary": "Access the Var:ProductName SDK and COM API Learn more about Var:ProductName SDK Learn more about developing Var:ProductName Add-ins. Learn more about Var:ProductName COM API Learn more about the COM API for automating Var:ProductName and what you can achieve with it. Articles Read articles on how to get more out of Var:ProductName."
  },
  "sdkconcepts/overview.html": {
    "href": "sdkconcepts/overview.html",
    "title": "Passolo SDK Documentation",
    "summary": "Passolo SDK Documentation Passolo is a localization tool that enables you to translate the user interfaces of software applications. You can find all the information about working with the Passolo SDK in the downloadable ZIP files. The ZIP files contains a compiled help file CHM with all the documenation, header files and samples. The SDK documentation from the CHM file is not available on this site. The plan is to move it to this site in the near future. What does the Passolo SDK cover? Passolo is a core application developed in C++. All available add-ins shipped with the product were developed using this SDK. Customers with specific requirements can use this SDK to develop their own Add-Ins. Add-Ins are grouped into the following types. Exporting string entries into files (for external translation), including uploading to external systems Importing string entries (from previously exported files), including import from external systems Parse custom resources (other than standard) from executables and DLLs Parse any user defined resource file format Resource display to visualize and edit translatable resources from translation list resources Segmentation to split parsed key/value pairs into single sentences for better matching and translation Find translation matches in external TMs, find known terminology in external termbases, connect to external MT systems, store translations into TMs Implement your own spell checking Add-Ins Add functionality to and define additional menu commands into the Tools menu Development Environment Passolo Add-Ins can be developed in C++ and C# using Visual Studio. For C++ developments the SDK contains a header file addin.h with all definitions. For C# .NET wrapper DLLs are deployed with the product that must be referenced in Visual Studio. Passolo 2018 SDK Download The SDK ZIP file can be downloaded here. Passolo 2022 SDK Download The SDK ZIP file can be downloaded here."
  }
}